import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import re

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score


df = pd.read_csv("Indian_startups_funding.csv")
df.head()

label_encoders = {}
categorical_columns = ['Startup', 'Vertical', 'City', 'Investors', 'Round']

for col in categorical_columns:
   
    if col not in df.columns:
      
        matching_cols = [c for c in df.columns if c.lower() == col.lower()]
        if matching_cols:
            col = matching_cols[0] 
        else:

            raise KeyError(f"Column '{col}' not found in the DataFrame (case-insensitive search also failed).")
            
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le
df.head()

plt.figure(figsize=(10,5))

city_column = 'City' if 'City' in df.columns else [c for c in df.columns if c.lower() == 'city'][0]  
city_counts = df[city_column].value_counts()  
sns.barplot(x=city_counts.index[:10], y=city_counts.values[:10]) 
plt.xticks(rotation=90)
plt.title("Top 10 Cities with Highest Startups")
plt.show()

columns = df.columns.tolist()


features = ['Startup', 'Vertical', 'City', 'Investors', 'Round']  

selected_features = [c for c in columns if any(f.lower() == c.lower() for f in features)]

if 'Year' not in columns:
    year_column = next((c for c in columns if 'year' in c.lower()), None)
    if year_column:
        selected_features.append(year_column)
    else:
        print("Warning: 'Year' column not found or a similar column could not be identified.")
else:
    selected_features.append('Year')

X = df[selected_features] 
y = df['Amount']
